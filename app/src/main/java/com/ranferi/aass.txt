// Define the new TextView and add it to the ConstraintLayout. Without constraints,
        // this view will be positioned at (0,0).
        TextView middleView = new TextView(getActivity());
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
            middleView.setId(View.generateViewId());
        }
        float desiredSp = getResources().getDimension(R.dimen.desired_sp);
        float density = getResources().getDisplayMetrics().density;
        middleView.setText("Middle View ");

        middleView.setTextSize(TypedValue.COMPLEX_UNIT_SP, desiredSp / density);
        // middleView.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);
        SpannableStringBuilder builder = new SpannableStringBuilder();
        builder.append(middleView.getText()).append(" ");
        builder.setSpan(new ImageSpan(getActivity().getApplicationContext(), R.drawable.foursquare_),
                builder.length() - 1, builder.length(), 0);
        builder.append(" Cree by Dexode");
        middleView.setText(builder);

        // middleView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20.0f);
        ConstraintLayout layout = v.findViewById(R.id.linearLayout);
        ConstraintLayout.LayoutParams lp =
                new ConstraintLayout.LayoutParams(ConstraintLayout.LayoutParams.MATCH_PARENT,
                        ConstraintLayout.LayoutParams.WRAP_CONTENT);
        layout.addView(middleView, lp);

        // Move the new view into place by applying constraints.
        ConstraintSet set = new ConstraintSet();
        // Get existing constraints. This will be the base for modification.
        set.clone(layout);
        int topMargin = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,
                8, getResources().getDisplayMetrics());
        int sideMargin = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,
                16, getResources().getDisplayMetrics());
        // Set up the connections for the new view. Constrain its top to the bottom of the top view.
        set.connect(middleView.getId(), ConstraintSet.TOP, R.id.place_name, ConstraintSet.BOTTOM, topMargin);
        // Constrain the top of the bottom view to the bottom of the new view. This will replace
        // the constraint from the bottom view to the bottom of the top view.
        set.connect(R.id.place_address, ConstraintSet.TOP, middleView.getId(), ConstraintSet.BOTTOM, topMargin);
        // Since views must be constrained vertically and horizontally, establish the horizontal
        // constaints such that the new view is centered.
        // set.centerHorizontally(middleView.getId(),ConstraintSet.PARENT_ID);
        // set.connect(middleView.getId(), ConstraintSet.BOTTOM, ConstraintSet.PARENT_ID, ConstraintSet.BOTTOM);
        set.connect(middleView.getId(), ConstraintSet.START, ConstraintSet.PARENT_ID, ConstraintSet.START, sideMargin);
        set.connect(middleView.getId(), ConstraintSet.END, ConstraintSet.PARENT_ID, ConstraintSet.END, sideMargin);
        // Finally, apply our good work to the layout.
        set.applyTo(layout);

        //final ExpandableTextView expandableTextView = (ExpandableTextView) v.findViewById(R.id.expandableTextView);
        // final ImageButton buttonToggle = (ImageButton) v.findViewById(R.id.imageButton);

        //TextView nameField = (TextView) v.findViewById(R.id.place_name);
        //nameField.setText(place.getNombres().get(0).getNombreSitio());
        //nameField.setText(nombres);
        //expandableTextView.setText(nombres);

        //TextView addressField = (TextView) v.findViewById(R.id.place_address);
        //addressField.setText(place.getDireccion());

        //CheckBox likedCheckBox = (CheckBox) v.findViewById(R.id.place_like);
        //likedCheckBox.setChecked(place.isMusica());
//        likedCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
//            @Override
//            public void onCheckedChanged(CompoundButton buttonView,
//                                         boolean isChecked) {
//                // mPlace.setLiked(isChecked);
//            }
//        });

        /*buttonToggle.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(final View v)
            {
                expandableTextView.toggle();
            }
        });*/

        /*CheckBox musicCheckBox = (CheckBox) v.findViewById(R.id.place_music);
        musicCheckBox.setChecked(place.isMusica());
        musicCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView,
                                         boolean isChecked) {
                place.setMusica(isChecked);
            }
        });*/

        /*Button dateButton = (Button) v.findViewById(R.id.crime_date);
        dateButton.setText(place.getDireccion());
        dateButton.setEnabled(false);*/




        /*ExpandList = (ExpandableListView) v.findViewById(R.id.exp_list);
        ExpListItems = SetStandardGroups();
        ExpAdapter = new ExpandListAdapter(getContext(), ExpListItems);
        ExpandList.setAdapter(ExpAdapter);
        Utility.setListViewHeightBasedOnChildren(ExpandList);

        ExpandList.setOnChildClickListener(new ExpandableListView.OnChildClickListener() {

            @Override
            public boolean onChildClick(ExpandableListView parent, View v,
                                        int groupPosition, int childPosition, long id) {

                String group_name = ExpListItems.get(groupPosition).getName();

                ArrayList<Child> ch_list = ExpListItems.get(
                        groupPosition).getItems();

                String child_name = ch_list.get(childPosition).getName();

                showToastMsg(group_name + "\n" + child_name);

                return false;
            }
        });

        ExpandList.setOnGroupExpandListener(new ExpandableListView.OnGroupExpandListener() {

            @Override
            public void onGroupExpand(int groupPosition) {
                String group_name = ExpListItems.get(groupPosition).getName();
                showToastMsg(group_name + "\n Expanded");

            }
        });

        ExpandList.setOnGroupCollapseListener(new ExpandableListView.OnGroupCollapseListener() {

            @Override
            public void onGroupCollapse(int groupPosition) {
                String group_name = ExpListItems.get(groupPosition).getName();
                showToastMsg(group_name + "\n Expanded");

            }
        });*/

        /*DropdownTextView secondDropdownTextView = (DropdownTextView) v.findViewById(R.id.first_dropdown_text_view);
        secondDropdownTextView.setTitleText(place.getNombres().get(0).getNombreSitio());
        secondDropdownTextView.setContentText(nombres);*/